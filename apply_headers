#!/bin/bash
# Software License Agreement (BSD)
#
# Author    Mike Purvis <mpurvis@clearpathrobotics.com>
# Copyright (c) 2013, Clearpath Robotics, Inc., All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
# following conditions are met:
# * Redistributions of source code must retain the above copyright notice, this list of conditions and the following
#   disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
#   disclaimer in the documentation and/or other materials provided with the distribution.
# * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

if [[ "$#" == "0" ]]; then
  echo "Usages:"
  echo "  apply_headers file1 file2 .."
  echo "  apply_headers --recurse"
  exit 1
fi

if [[ "$HEADERS_PATH" == "" ]]; then
  echo "Please set \$HEADERS_PATH environment variable."
  exit 1
fi

# Either we recurse through every file in the current directory,
# or we accept a list of the specific files to look at.
if [[ "$1" == "--recurse" ]]; then
  # TODO: Abort if this is not a source controlled directory, or
  # it's a SCM directory with uncommitted changes.
  filenames=$(find . -not -path '*/\.*' -type f)
else
  filenames=$*
fi

for filename in ${filenames}; do
  # Skip over directories and other non-regular files.
  if [[ ! -f "${filename}" ]]; then
    echo "Skipping non regular file: $filename"
    continue
  fi

  base_filename=$(basename "$filename")
  extension="${base_filename##*.}"

  grep -qi "copyright" "$filename"
  if [[ "$?" == "0" ]]; then
    echo "Already contains copyright notice: $filename"
    continue
  fi

  unset -v shebang
  if [[ -x "$filename" ]]; then
    # Executable file, get type from shebang
    shebang=$(head -n 1 "$filename")
    contents=$(tail -n +2 "$filename")
    if [[ "$shebang" == *python* ]]; then
      extension=py
      echo "Applying header for python shebang to file: $filename"
    elif [[ "$shebang" == *bash* ]]; then
      extension=bash
      echo "Applying header for bash shebang to file: $filename"
    else
      echo "Unknown shebang [$shebang] in file: $filename"
      continue
    fi
    header_filename="$HEADERS_PATH/$extension"
  else
    # Non-executable, get type from extension.
    contents=$(< "$filename")
    header_filename="$HEADERS_PATH/$extension"
    if [[ ! -f "$header_filename" ]]; then
      echo "No header found for type [$extension] for file: $filename"
      continue
    fi
    echo "Applying new header of type [$extension] to file: $filename"
  fi

  # Template configuration
  cat << EOF > /tmp/header_config.py
user="$(git config --get user.name)"
email="$(git config --get user.email)"
year="$(date +%Y)"
filename="$base_filename"
EOF

header=$(empy -F/tmp/header_config.py "$header_filename")

#out="/tmp/$base_filename"
out="$filename"
rm -f "$out"
touch "$out"

if [ -n "$shebang" ]; then
  echo "$shebang" >> "$out"
fi

echo "$header" >> "$out"
echo "$contents" >> "$out"

done
